#
# Copyright (c) 2020, salesforce.com, inc.
# All rights reserved.
# Licensed under the BSD 3-Clause license.
# For full license text, see LICENSE.txt file in the repo root  or https://opensource.org/licenses/BSD-3-Clause
#
workspace(name = "bazel_demo_resolved_repos")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")


# ---------------------------------------------
# Bazel version check
# Ensure people are running with a good-enough version of Bazel
# ---------------------------------------------

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

git_repository(
    name = "bazel_skylib",
    commit = "e59b620b392a8ebbcf25879fc3fde52b4dc77535",
    remote = "https://github.com/bazelbuild/bazel-skylib",
)
load("@bazel_skylib//lib:versions.bzl", "versions")
versions.check("4.2.1")

# ---------------------------------------------
# External Dependencies
# ---------------------------------------------

# 3.1 is latest, but source stops working in intellij
RULES_JVM_EXTERNAL_TAG = "2.9"
RULES_JVM_EXTERNAL_SHA = "e5b97a31a3e8feed91636f42e19b11c49487b85e5de2f387c999ea14d77c7f45"
http_archive(
    name = "rules_jvm_external",
    strip_prefix = "rules_jvm_external-%s" % RULES_JVM_EXTERNAL_TAG,
    sha256 = RULES_JVM_EXTERNAL_SHA,
    url = "https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip" % RULES_JVM_EXTERNAL_TAG,
)
load("@rules_jvm_external//:defs.bzl", "maven_install")

maven_install(
      artifacts = [
        "ch.qos.logback:logback-core:1.2.3",
        "com.google.guava:guava:20.0",
        "junit:junit:4.12",
        "org.hamcrest:hamcrest-core:1.3",
        "org.slf4j:slf4j-api:1.7.25",
      ],
      repositories = [
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
      ],
      fetch_sources = True,
      version_conflict_policy = 'pinned',
      strict_visibility = True,
      generate_compat_repositories = False,
  )

# ---------------------------------------------
# Python
# required by the protobuf rules
# ---------------------------------------------

http_archive(
    name = "rules_python",
    sha256 = "aa96a691d3a8177f3215b14b0edc9641787abaaa30363a080165d06ab65e1161",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.0.1/rules_python-0.0.1.tar.gz",
)
load("@rules_python//python:repositories.bzl", "py_repositories")
py_repositories()

# ---------------------------------------------
# Protobuf
# https://github.com/bazelbuild/bazel/issues/6984#issuecomment-449472008
# https://github.com/bazelbuild/bazel/issues/3668
# https://github.com/bazelbuild/bazel-blog/pull/146/files#diff-bde5ec77860ad065de8fd8ab1862de03
# ---------------------------------------------

# proto_library, cc_proto_library, and java_proto_library rules implicitly
# depend on @com_google_protobuf for protoc and proto runtimes.
# This statement defines the @com_google_protobuf repo.
http_archive(
    name = "com_google_protobuf",
    strip_prefix = "protobuf-3.6.1.3",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v3.6.1.3.tar.gz"],
)

# java_lite_proto_library rules implicitly depend on @com_google_protobuf_javalite//:javalite_toolchain,
# which is the JavaLite proto runtime (base classes and common utilities).
http_archive(
    name = "com_google_protobuf_javalite",
    strip_prefix = "protobuf-javalite",
    urls = ["https://github.com/google/protobuf/archive/javalite.zip"],
)

# ---------------------------------------------
# TRANSITIVE EXTERNAL GIT WORKSPACES
# BazelRecursiveTop has a rule that is used by this workspace, and it also needs to
# bring in BazelRecursiveMiddle and BazelRecursiveBottom.
# This demonstrates transitive git repos (and the lack of real support for it).
# ---------------------------------------------

git_repository(
    name = "BazelRecursiveTop",
    branch = "master",
    remote = "https://github.com/plaird/BazelRecursiveTop",
)

git_repository(
    name = "BazelRecursiveMiddle",
    branch = "master",
    remote = "https://github.com/plaird/BazelRecursiveMiddle",
)

git_repository(
    name = "BazelRecursiveBottom",
    branch = "master",
    remote = "https://github.com/plaird/BazelRecursiveBottom",
)
